project_repository: https://github.com/shchur/automlbenchmark#autogluon-timeseries-automl23    # this is also the url used to clone the repository on ec2 instances
                                                                          # when running those without docker.
                                                                          # to clone a specific branch/tag, add a url fragment, e.g.:
                                                                          # https://github.com/openml/automlbenchmark#stable
seed: 0

frameworks:              # configuration namespace for the frameworks definitions.
  definition_file:       # list of yaml files describing the frameworks base definitions.
    - '{root}/resources/frameworks.yaml'
    - '{user}/frameworks.yaml'
  allow_duplicates: true     # if true, the last definition is used.
  tags: ['stable', 'latest']  # the list of supported tags when looking up frameworks:
                              # for example frmwk:latest will look for framework frmwk in a frameworks_latest.yaml file if present.

benchmarks:                     # configuration namespace for the benchmarks definitions.
  definition_dir:               # list of directories containing the benchmarks yaml definitions.
    - '{root}/resources/benchmarks'
    - '{user}/benchmarks'
  constraints_file:             # list of yaml files describing the benchmarks runtime constraints.
    - '{root}/resources/constraints.yaml'
    - '{user}/constraints.yaml'

job_scheduler:           # configuration namespace
  max_parallel_jobs: 3000  # safety limit: increase this if you want to be able to run many jobs in parallel, especially in aws mode. Defaults to 10 to allow running the usual 10 folds in parallel with no problem.
  delay_between_jobs: 8  # delay in seconds between each parallel job start

versions:              # configuration namespace for versions enforcement (libraries versions are usually enforced in requirements.txt for the app and for each framework).
  pip:
  python: 3.9          # the Python minor version that will be used by the application in containers and cloud instances, , also used as a based version for virtual environments created for each framework.

aws:                    # configuration namespace for AWS mode.
  region: 'us-east-1'            # the AWS region to use. By default, the app will use the region set in ~/.aws/config when configuring AWS CLI.

  s3:                               # sub-namespace for AWS S3 service.
    bucket: automl-benchmark-REPLACEME        # must be unique im whole Amazon s3, max 40 chars, and include only numbers, lowercase characters and hyphens.
    temporary: false
    root_key: ec2/autogluon-timeseries-automl23/                  # results will be saved to this directory

  ec2:
    instance_type:                       #
      series: m6i                        #
      map:                               # map between num cores required and ec2 instance type sizes
        default: xlarge
        '1': small
        '2': large
        '4': xlarge
        '8': 2xlarge
        '16': 4xlarge
        '32': 8xlarge
        '64': 16xlarge
    overhead_time_seconds: 7200

  resource_files:               # additional resource files or directories that are made available to benchmark runs on ec2, from remote input or user directory.
    - '{user}/config.yaml'
    - '{user}/frameworks.yaml'
    - '{user}/frameworks_latest.yaml'
    - '{user}/constraints.yaml'
    - '{user}/benchmarks'
